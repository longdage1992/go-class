apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "im.zego.goclass"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versCode.toInteger()
        versionName versName

        buildConfigField "String", "appBuildType", "\"$appBuildType\""
        buildConfigField "String", "abi_Filters", "\"$abi_Filters\""

        ndk {
            abiFilters abi_Filters
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [APP_ID        : "2c28a169e0",
                                APP_VERSION   : versName,
                                APP_CHANNEL   : appChannel,
                                BUGLY_IS_DEBUG: buglyIsDebug
        ]
    }

    signingConfigs {
        release {
            storeFile file(keyFile)
            keyAlias keyName
            keyPassword keyPwd
            storePassword storePwd
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs',
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            output.outputFileName = "goclass.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // androidx
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.webkit:webkit:$webkit_version"

    //glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    // retrofit & okHttp
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    // PickerView
    implementation 'com.github.zyyoona7:wheelview:1.0.7'

    // Bugly
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'


    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.permissionx.guolindev:permissionx:1.4.0'
}


